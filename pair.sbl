
* This software is licensed under the MIT License, contained in the file LICENSE.

* Copyright (c) 2016 dave shields

-include "words.sbl"

* 	find pairs of letters that never occur in any word in the word list,
*	and so may help eliminate possible word candidates.

*	The result obtained can be found following the *end* line

	&anchor = &trim = 1

	init()
*	all = getwords('../src/enable1.txt')	:f(eof)
	input(.ifile,2,'../enable1.txt')	:s(read)
	output = 'unable to open input' :(end)
read
	word = ifile			:f(read.done)
	all = add(all,word)
					:(read)
read.done
	all = all ' '

*	all now has the word list as one large string.

	letters = &lcase
	first = letters
*	try all two letter combinations to see which are not
*	in any word in the dictionary.
next.f
	first len(1) . f =			:f(eof)
	second = letters
*	now iterate over each letter s in second, looking for pair
*	(f,s) in all
next.s
	second len(1) . s =			:f(next.f)
*	continue on if (f,s) found in some word
	all breakx(f) f s			:s(next.s)
	output = f s				:(next.s)
eof
end
bq
bx
cf
cg
cj
cv
cx
dx
fq
fv
fx
fz
gq
gx
hx
jb
jc
jf
jg
jh
jl
jm
jp
jq
jr
jt
jv
jw
jx
jy
jz
kq
kx
kz
mx
pq
pv
px
pz
qb
qc
qd
qf
qg
qh
qj
qk
ql
qm
qn
qp
qq
qr
qt
qv
qx
qy
qz
rx
sx
tx
vb
vc
vf
vh
vj
vm
vp
vq
vt
vw
vx
wq
wv
wx
xj
xk
xr
xx
xz
yq
zf
zr
zx
* Above list but with pairs with same initial letter on a single line
bq bx
cf cg cj cv cx
dx
fq fv fx fz
gq gx
hx
jb jc jf jg jh jl jm jp jq jr jt jv jw jx jy jz
kq kx kz
mx
pq pv px pz
qb qc qd qf qg qh qj qk ql qm qn qp qq qr qt qv qx qy qz
rx
sx
tx
vb vc vf vh vj vm vp vq vt vw vx
wq wv wx
xj xk xr xx xz
yq
zf zr zx
